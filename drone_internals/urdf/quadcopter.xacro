<?xml version="1.0"?>

<robot xmlns:xacro="http://wiki.ros.org/xacro" name="quadcopter">


  <!-- drone properties -->
  <xacro:property name="frame_radius" value="0.05"/>
  <xacro:property name="frame_height" value="0.025"/>
  <xacro:property name="frame_mass" value="0.34"/>
  <xacro:property name="arm_radius" value="0.01"/>
  <xacro:property name="arm_length" value="0.1"/>
  <xacro:property name="arm_mass" value="0.01"/>
  <xacro:property name="arm_height_offset" value="0.025"/>
  <xacro:property name="arm_angle" value="1.0471975512"/>
  <xacro:property name="arm_pos_radius" value="0.04"/>
  <xacro:property name="propeller_radius" value="0.05"/>
  <xacro:property name="propeller_height" value="0.01"/>
  <xacro:property name="propeller_height_offset" value="0.055"/>
  <xacro:property name="propeller_mass" value="0.01"/>
  <xacro:property name="leg_angle" value="-0.78539816339"/>
  <xacro:property name="leg_radius" value="0.01"/>
  <xacro:property name="leg_length" value="0.05"/>
  <xacro:property name="leg_mass" value="0.01"/>
  <xacro:property name="leg_pos_radius" value="0.04"/>
  <xacro:property name="leg_height_offset" value="-0.025"/>


  <!-- camera properties -->
  <xacro:property name="camera_width" value="0.02"/>
  <xacro:property name="camera_length" value="0.02"/>
  <xacro:property name="camera_height" value="0.01"/>
  <xacro:property name="camera_mass" value="0.01"/>
  <xacro:property name="camera_fov" value="90"/>


  <xacro:macro name="cylinder_inertial" params="radius height mass *origin">
    <inertial>
      <mass value="${mass}"/>
      <xacro:insert_block name="origin"/>
      <inertia
        ixx="${0.0833333 * mass * (3 * radius * radius + height * height)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${0.0833333 * mass * (3 * radius * radius + height * height)}"
        iyz="0.0"
        izz="${0.5 * mass * radius * radius}"
      />
    </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial" params="name m x y z">
    <inertial name="${name}_inertial">
      <mass value="${m}"/>
      <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
        iyy="${m*(x*x+y*y)/12}" iyz = "0"
        izz="${m*(x*x+z*z)/12}"/>
    </inertial>
  </xacro:macro>

  <!-- arm macro-->
  <xacro:macro name="arm" params="i">
    <link name="arm${i}">
      <visual>
        <origin xyz="${cos((i-1)*pi/2+pi/4)*(arm_pos_radius+arm_length/2)} ${sin((i-1)*pi/2+pi/4)*(arm_pos_radius+arm_length/2)} ${frame_height/2-arm_radius+arm_height_offset}" rpy="0 ${arm_angle} ${(i-1)*pi/2+pi/4}"/>
        <geometry>
          <cylinder radius="${arm_radius}" length="${arm_length}"/>
        </geometry>
        <material name="arm_material"/>
      </visual>
      <collision>
        <origin xyz="${cos((i-1)*pi/2+pi/4)*(arm_pos_radius+arm_length/2)} ${sin((i-1)*pi/2+pi/4)*(arm_pos_radius+arm_length/2)} ${frame_height/2-arm_radius+arm_height_offset}" rpy="0 ${arm_angle} ${(i-1)*pi/2+pi/4}"/>
        <geometry>
          <cylinder radius="${arm_radius}" length="${arm_length}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${arm_radius}" height="${arm_length}" mass="${arm_mass}">
        <origin xyz="${cos((i-1)*pi/2+pi/4)*(arm_pos_radius+arm_length/2)} ${sin((i-1)*pi/2+pi/4)*(arm_pos_radius+arm_length/2)} ${frame_height/2-arm_radius+arm_height_offset}" rpy="0 ${arm_angle} ${(i-1)*pi/2+pi/4}"/>
      </xacro:cylinder_inertial>
    </link>
   
    <joint name="frame_arm${i}" type="fixed">
      <parent link="frame"/>
      <child link="arm${i}"/>
    </joint>
   
    <gazebo reference="arm${i}">
      <material>Gazebo/Grey</material>
    </gazebo>
  </xacro:macro>


  <!-- propellor macro -->
  <xacro:macro name="propeller" params="i mat">
    <link name="propeller${i}">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${propeller_radius}" length="${propeller_height}"/>
        </geometry>
        <material name="propeller_material"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${propeller_radius}" length="${propeller_height}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${propeller_radius}" height="${propeller_height}" mass="${propeller_mass}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:cylinder_inertial>
    </link>
   
    <joint name="arm${i}_propeller${i}" type="revolute">
      <parent link="arm${i}"/>
      <child link="propeller${i}"/>
      <origin xyz="${cos((i-1)*pi/2+pi/4)*(frame_radius+arm_length*sin(arm_angle))} ${sin((i-1)*pi/2+pi/4)*(frame_radius+arm_length*sin(arm_angle))} ${frame_height/2-arm_radius+propeller_height_offset}" rpy="0 0 0"/>
      <axis xyz="0 0 1"/>
      <limit lower="0" upper="0" effort="0" velocity="0"/>
    </joint>
   
    <gazebo reference="propeller${i}">
      <material>${mat}</material>
    </gazebo>
  </xacro:macro>

  <material name="frame_material">
    <color rgba="1 0.2 0.2 1"/>
  </material>
 
  <material name="arm_material">
    <color rgba="0.8 0.8 0.8 1"/>
  </material>
 
  <material name="propeller_material">
    <color rgba="0 0 0 0.6"/>
  </material>

  <!-- leg macro-->
  <xacro:macro name="leg" params="i">
    <link name="leg${i}">
      <visual>
        <origin xyz="${cos((i-1)*pi/2+pi/4)*(leg_pos_radius+leg_length/2)} ${sin((i-1)*pi/2+pi/4)*(leg_pos_radius+leg_length/2)} ${frame_height/2-leg_radius+leg_height_offset}" rpy="0 ${leg_angle} ${(i-1)*pi/2+pi/4}"/>
        <geometry>
          <cylinder radius="${leg_radius}" length="${leg_length}"/>
        </geometry>
        <material name="arm_material"/>
      </visual>
      <collision>
        <origin xyz="${cos((i-1)*pi/2+pi/4)*(leg_pos_radius+leg_length/2)} ${sin((i-1)*pi/2+pi/4)*(leg_pos_radius+leg_length/2)} ${frame_height/2-leg_radius+leg_height_offset}" rpy="0 ${leg_angle} ${(i-1)*pi/2+pi/4}"/>
        <geometry>
          <cylinder radius="${leg_radius}" length="${leg_length}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${leg_radius}" height="${leg_length}" mass="${leg_mass}">
        <origin xyz="${cos((i-1)*pi/2+pi/4)*(leg_pos_radius+leg_length/2)} ${sin((i-1)*pi/2+pi/4)*(leg_pos_radius+leg_length/2)} ${frame_height/2-leg_radius+leg_height_offset}" rpy="0 ${leg_angle} ${(i-1)*pi/2+pi/4}"/>
      </xacro:cylinder_inertial>
    </link>
   
    <joint name="frame_leg${i}" type="fixed">
      <parent link="frame"/>
      <child link="leg${i}"/>
    </joint>
   
    <gazebo reference="leg${i}">
      <material>Gazebo/Grey</material>
    </gazebo>
  </xacro:macro>

  <!-- frame link -->
  <link name="frame">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${frame_radius}" length="${frame_height}"/>
      </geometry>
      <material name="frame_material">
        <color rgba="0.8 0.8 0.8 1.0"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${frame_radius}" length="${frame_height}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertial radius="${frame_radius}" height="${frame_height}" mass="${frame_mass}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:cylinder_inertial>
  </link>

  <gazebo reference="frame">
    <material>Gazebo/Orange</material>
  </gazebo>

  <!-- camera macro -->
  <xacro:macro name="camera" params="i x y z r p yw w h fov">
    <link name='camera${i}_link'>
      <xacro:box_inertial name="camera${i}_link" m="${camera_mass}" x="${camera_width}" y="${camera_length}" z="${camera_height}"/>
      <collision name='camera${i}_link_collision'>
        <geometry>
          <box size="${camera_length} ${camera_width} ${camera_height}"/>
        </geometry>
      </collision>
      <visual name='camera${i}_link_visual'>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="${camera_length} ${camera_width} ${camera_height}"/>
        </geometry>
      </visual>
    </link>

    <joint name="camera${i}_joint" type="fixed">
      <parent link="frame"/>
      <child link="camera${i}_link"/>
      <origin xyz="${x} ${y} ${z}" rpy="${r} ${p} ${yw}"/>
    </joint>

    <gazebo reference="camera${i}_link">
      <sensor type="camera" name="camera${i}">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>${fov * pi / 180}</horizontal_fov>
          <image>
            <width>${w}</width>
            <height>${h}</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <imageTopicName>image_raw</imageTopicName>
          <!-- <xacro:attribute name="cameraName" value="camera${i}"/>
          <xacro:attribute name="frameName" value="camera${i}_link"/> -->
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <cameraName>camera${i}</cameraName>
          <frameName>camera${i}_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

<!-- defining 4 arms, legs and propellors -->
<xacro:arm i="1"/>
<xacro:arm i="2"/>
<xacro:arm i="3"/>
<xacro:arm i="4"/>

<xacro:leg i="1"/>
<xacro:leg i="2"/>
<xacro:leg i="3"/>
<xacro:leg i="4"/>

<xacro:propeller i="1" mat="Gazebo/RedTransparent"/>
<xacro:propeller i="2" mat="Gazebo/RedTransparent"/>
<xacro:propeller i="3" mat="Gazebo/GreenTransparent"/>
<xacro:propeller i="4" mat="Gazebo/GreenTransparent"/>


<!-- defining cameras -->
<xacro:camera i="0" x="${frame_radius}" y="0" z="0" r="0" p="0" yw="0" w="800" h="400" fov = "90"/>
<xacro:camera i="1" x="${-frame_radius}" y="0" z="0" r="0" p="0" yw="${pi}" w="800" h="400" fov = "90"/>
<xacro:camera i="2" x="0" y="${frame_radius}" z="0" r="0" p="0" yw="${pi/2}" w="800" h="400" fov = "90"/>
<xacro:camera i="3" x="0" y="${-frame_radius}" z="0" r="0" p="0" yw="${-pi/2}" w="800" h="400" fov = "90"/>
<xacro:camera i="_top" x="0" y="0" z="${frame_height/2}" r="0" p="-1.8" yw="0" w="256" h="256" fov = "20"/>




  <!-- motor control plugin-->
  <gazebo>
    <plugin name="drone_internals" filename="libdrone_internals.so">
      <updateRate>100</updateRate>
      <publishTf>true</publishTf>
      <rotorThrustCoeff>0.00025</rotorThrustCoeff>
      <rotorTorqueCoeff>0.0000074</rotorTorqueCoeff>
    </plugin>
  </gazebo>


</robot>