<?xml version='1.0'?>

<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="camera_width" value="0.02"/>
  <xacro:property name="camera_length" value="0.02"/>
  <xacro:property name="camera_height" value="0.01"/>
  <xacro:property name="camera_mass" value="0.2"/>
  <xacro:property name="body_width" value="0.1"/>
  <xacro:property name="body_length" value="0.1"/>
  <xacro:property name="body_height" value="0.05"/>
  <xacro:property name="body_mass" value="0.5"/>

  <xacro:include filename="$(find flight_test)/urdf/macros.xacro"/>



  <link name='body'>
    <xacro:box_inertial name="body" m="${body_mass}" x="${body_length}" y="${body_width}" z="${body_height}"/>
    <collision name='body_collision'>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
    </collision>
    <visual name='body_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${body_length} ${body_width} ${body_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
  </link>

  <gazebo reference="body">
    <material>Gazebo/Orange</material>
  </gazebo>


  <link name='camera_link'>
    <xacro:box_inertial name="camera_link" m="${camera_mass}" x="${camera_width}" y="${camera_length}" z="${camera_height}"/>
    <collision name='camera_link_collision'>
      <geometry>
        <box size="${camera_length} ${camera_width} ${camera_height}"/>
      </geometry>
    </collision>
    <visual name='camera_link_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${camera_length} ${camera_width} ${camera_height}"/>
      </geometry>
    </visual>
  </link>

  <joint name="camera_joint" type="fixed">
    <parent link="body"/>
    <child link="camera_link"/>
    <origin xyz="${body_length/2} 0 ${body_height/2+camera_height/2}"/>
  </joint>



  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1600</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
              That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>



  <!-- Thruster Plugin -->
  <gazebo reference = "body">
    <plugin name="thruster_force_plugin" filename="libgazebo_ros_force.so">
      <robotNamespace></robotNamespace>
      <bodyName>body</bodyName>
      <topicName>/thruster_force</topicName> 
    </plugin>
  </gazebo>










</robot>
